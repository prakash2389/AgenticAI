# -*- coding: utf-8 -*-
"""pyautogen.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TYUrzv9OcEZ56wvojxCYLnxjw4-H2LYO
"""

!pip install pyautogen langchain langchain-openai

import autogen

# Configure the API settings (ensure you replace with your actual OpenAI API key)
config_list = [
    {
        "model": "gpt-4o",  # Use "gpt-3.5-turbo" if GPT-4 is unavailable
        "api_key": "*******************************************",  # Replace with your OpenAI API key
    }
]

from autogen import AssistantAgent, UserProxyAgent

# Define the Developer Agent that generates Python code
developer = AssistantAgent(
    name="Developer",
    llm_config={"config_list": config_list}
)

# Define the Reviewer Agent that reviews and refines the code provided by the Developer

reviewer = AssistantAgent(
    name="Reviewer",
    llm_config={"config_list": config_list}
)

# Define the Manager Agent that assigns the initial task
manager = UserProxyAgent(
    name="Manager",
    human_input_mode="NEVER",  # Operates autonomously
    max_consecutive_auto_reply=3,  # Limits consecutive auto replies
    is_termination_msg=lambda msg: "TERMINATE" in msg["content"],
    llm_config={"config_list": config_list}
)

# Global variable to store final code
final_code = {"content": ""}

# Define the conversation flow
def conversation_flow():
    global final_code

    # Step 1: Manager gives task to Developer
    manager.initiate_chat(
        developer,
        message="Write a Python function to check if a given number is prime."
    )

    # Step 2: Developer writes the code and sends it to Reviewer
    response = developer.initiate_chat(
        reviewer,
        message="Here is my function for checking if a number is prime. Can you review and suggest improvements?"
    )

    # Step 3: Reviewer evaluates the code and provides feedback
    review_response = reviewer.initiate_chat(
        developer,
        message="I will review your code and provide suggestions if necessary."
    )
    # Capture the final reviewed function
    final_code["content"] = review_response

# Start the conversation
conversation_flow()

final_code["content"]