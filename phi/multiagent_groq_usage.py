# -*- coding: utf-8 -*-
"""multiagent_groq_usage.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e1XwPBdP_fF5C-s_4CJNpBz6wYlLcATX
"""

!pip install phidata

!pip install Groq

"""# **Agent Creation**"""

groq_api_key = "***********"

from phi.agent import Agent
from phi.model.groq import Groq
from phi.model.openai import OpenAIChat
from phi.tools.yfinance import YFinanceTools

finance_agent = Agent(
    model=OpenAIChat(id="gpt-4o", api_key=open_ai_api_key),
    name="Finance Agent",
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, stock_fundamentals=True)],
    show_tool_calls=True,
    markdown=True,
    instructions=["use Tables to display Data"]
)

"""# Agent **Response**"""

finance_agent.print_response("compare Apple vs Google")

!pip install duckduckgo_search

"""# **Multi Agent Creation**

# ***Finance Agent and Web Agent ***
"""

from phi.tools.duckduckgo import DuckDuckGo
from phi.agent import Agent
from phi.model.groq import Groq
from phi.tools.yfinance import YFinanceTools

finance_agent = Agent(
    name="Finance Agent",
    model=Groq(id="llama3-8b-8192", api_key=groq_api_key),
    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, stock_fundamentals=True)],
    show_tool_calls=True,
    markdown=True,
    instructions=["use Tables to display Data"]
)
web_agent = Agent(
    name="Web Agent",
    model=Groq(id="llama3-8b-8192", api_key="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"),
    tools=[DuckDuckGo()],
    show_tool_calls=True,
    markdown=True,
    instructions=["ALways includes sources"]
)

# finance_agent.add_tool(DuckDuckGoSearchTool())

"""# **Joining Multiple Agents**"""

agent_team = Agent(
    name="Multi Agent",
    model=Groq(id="llama3-8b-8192", api_key=groq_api_key),
    team = [web_agent, finance_agent],
    instructions=["Use respective agent required for user query", "incase of current informatiom use web_agent and related to finance use finance_agent"],
    show_tool_calls=True,
    markdown=True
)

agent_team.print_response("compare Apple vs Google")